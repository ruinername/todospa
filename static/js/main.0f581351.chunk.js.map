{"version":3,"sources":["modules/editor/actionTypes.js","modules/firebase/actionTypes.js","modules/firebase/actions.js","modules/editor/actions.js","modules/editor/reducer.js","modules/firebase/reducer.js","modules/index.js","store.js","containers/home/index.js","containers/app/index.js","index.js"],"names":["SAVE_DATA","GET_DATA","SAVE_TOKEN","GET_TOKEN","SAVE_UID","GET_UID","SET_LOADING","authFirebase","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","getState","state","token","res","wrap","_context2","prev","next","firebase","type","types","loading","auth","createUserWithEmailAndPassword","concat","sent","t0","signInWithEmailAndPassword","uid","user","getFromFirebase","stop","_x3","_x4","apply","this","arguments","_ref4","_callee4","_context4","abrupt","database","ref","once","then","snapshot","data","val","force","_x7","_x8","saveData","_ref","_callee","_context","_ref3","_callee3","_context3","set","editor","error","_x5","_x6","_x","initialState","Immutable","aboutTooltip","combineReducers","length","undefined","action","localStorage","JSON","stringify","merge","parse","time","blocks","text","level","version","react_default","createElement","react_editorjs_umd_default","autofocus","holderId","onChange","onReady","console","log","queryString","require","history","History","middleware","thunk","routerMiddleware","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","composedEnhancers","compose","applyMiddleware","store","createStore","connectRouter","rootReducer","params","window","location","search","_x2","uuidv4","connect","bindActionCreators","onClick","qrSvg","vkQr","createQR","qrSize","isShowLogo","style","textAlign","width","margin","marginBottom","dangerouslySetInnerHTML","__html","showQr","App","react_router","exact","path","component","Home","target","document","querySelector","render","es","lib","app"],"mappings":"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","file":"static/js/main.0f581351.chunk.js","sourcesContent":["export const SAVE_DATA = 'editor.saveData';\nexport const GET_DATA = 'editor.getData';","export const SAVE_USER = 'firebase.saveUser';\nexport const SAVE_TOKEN = 'firebase.saveToken';\nexport const GET_TOKEN = 'firebase.getToken';\nexport const SAVE_UID = 'firebase.saveUid';\nexport const GET_UID = 'firebase.getUid';\nexport const SET_LOADING = 'firebase.setLoading';","import * as types from './actionTypes';\nimport uuidv4 from 'uuid/v4';\nimport firebase from 'firebase';\nimport { SAVE_DATA } from '../editor/actionTypes'\n\nexport function saveUser() {\n  return async (dispatch, getState) => {\n    let state = getState();\n    if(!state.firebase.token){\n      let token = uuidv4();\n      dispatch({type: types.SAVE_TOKEN, token});\n    }\n  };\n}\n\nexport function authFirebase() {\n  return async (dispatch, getState) => {\n    let state = getState();\n    const token = state.firebase.token;\n    dispatch({type: types.SET_LOADING, loading: true});\n    let res;\n    try {\n      res = await firebase.auth().createUserWithEmailAndPassword(`${token}@voloshinskii.ru`, token);\n    }\n    catch (e) {\n      res = await firebase.auth().signInWithEmailAndPassword(`${token}@voloshinskii.ru`, token);\n    }\n    dispatch({type: types.SAVE_UID, uid: res.user.uid});\n    await dispatch(getFromFirebase());\n    dispatch({type: types.SET_LOADING, loading: false});\n  };\n}\n\nexport function saveInFirebase() {\n  return async (dispatch, getState) => {\n    let state = getState();\n    const uid = state.firebase.uid;\n    firebase.database().ref('users/' + uid).set({\n      data: state.editor.data\n    }, function(error) {\n      if (error) {\n        // The write failed...\n      } else {\n        // Data saved successfully!\n      }\n    });\n  }\n}\n\nexport function getFromFirebase() {\n  return async (dispatch, getState) => {\n    let state = getState();\n    const uid = state.firebase.uid;\n    if(uid){\n      return firebase.database().ref('/users/' + uid).once('value').then(function(snapshot) {\n        let data = snapshot.val();\n        dispatch({type: SAVE_DATA, data: data.data, force: true});\n      });\n    }\n  }\n}","import * as types from './actionTypes';\nimport { saveInFirebase } from '../firebase/actions'\n\nexport function saveData(data) {\n  return async (dispatch) => {\n    dispatch({ type: types.SAVE_DATA, data });\n    dispatch(saveInFirebase());\n  };\n}\n\nexport function getData() {\n  return async (dispatch) => {\n    dispatch({ type: types.GET_DATA });\n  };\n}","import React from 'react';\nimport Immutable from 'seamless-immutable';\n\nimport * as types from './actionTypes';\nimport Editor from '@stfy/react-editor.js'\nimport { saveData } from './actions'\n\nconst initialState = Immutable({\n  aboutTooltip: true,\n});\n\nexport default function reduce(state = initialState, action = {}) {\n  switch (action.type) {\n    case types.SAVE_DATA:\n      localStorage['data'] = JSON.stringify(action.data);\n      return state.merge({\n        data: action.data,\n      });\n    case types.GET_DATA:\n      let data = (localStorage['data'] && JSON.parse(localStorage['data'])) || {\n        \"time\" : 1554920381017,\n        \"blocks\" : [\n          {\n            \"type\" : \"header\",\n            \"data\" : {\n              \"text\" : \"Hello world!\",\n              \"level\" : 2\n            }\n          },\n        ],\n        \"version\" : \"2.12.4\"\n      };\n      function editor(saveData){\n        return <Editor\n          autofocus\n          holderId=\"editorjs-container\"\n          onChange={(data) => saveData(data)}\n          onReady={() => console.log('Start!')}\n          data={data}\n        />\n      }\n      return state.merge({\n        data,\n        editor\n      });\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport Immutable from 'seamless-immutable';\nimport * as types from './actionTypes';\n\nconst initialState = Immutable({});\n\nexport default function reduce(state = initialState, action = {}) {\n  switch (action.type) {\n    case types.SAVE_TOKEN:\n      localStorage['token'] = action.token;\n      return state.merge({\n        token: action.token,\n      });\n    case types.GET_TOKEN:\n      let token = localStorage['token'];\n      return state.merge({\n        token\n      });\n    case types.SAVE_UID:\n      localStorage['uid'] = action.uid;\n      return state.merge({\n        uid: action.uid\n      });\n    case types.GET_UID:\n      let uid = localStorage['uid'];\n      return state.merge({\n        uid\n      });\n    case types.SET_LOADING:\n      return state.merge({\n        loading: action.loading\n      });\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux'\nimport editor from './editor/reducer'\nimport firebase from './firebase/reducer'\n\nexport default combineReducers({\n  editor,\n  firebase\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport * as History from 'history'\nimport rootReducer from './modules'\nimport { getData } from './modules/editor/actions'\nimport { authFirebase, getFromFirebase, saveUser } from './modules/firebase/actions'\nimport firebase from 'firebase'\nimport * as types from './modules/firebase/actionTypes'\nconst queryString = require('query-string');\n\nexport const history = History.createBrowserHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC1Ae16VeG_VHqZQXWLNxY9oUe5bmAQATM\",\n  authDomain: \"todo-f5cb1.firebaseapp.com\",\n  databaseURL: \"https://todo-f5cb1.firebaseio.com\",\n  projectId: \"todo-f5cb1\",\n  storageBucket: \"\",\n  messagingSenderId: \"294517743961\",\n  appId: \"1:294517743961:web:f9bdc8d11ede7b3cc3ec48\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nconst store = createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n);\n\nconst params = queryString.parse(window.location.search);\nif(params.token){\n  store.dispatch({type: types.SAVE_TOKEN, token: params.token});\n  store.dispatch(authFirebase());\n}\n\nstore.dispatch({type: 'firebase.getToken'});\nstore.dispatch({type: 'firebase.getUid'});\nstore.dispatch(getData());\nstore.dispatch(saveUser());\nstore.dispatch(getFromFirebase());\n\nexport default store;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Editor from '@stfy/react-editor.js';\nimport { saveData } from '../../modules/editor/actions';\nimport { authFirebase } from '../../modules/firebase/actions'\nimport vkQr from '@vkontakte/vk-qr';\n\nfunction showQr(uid, token) {\n  const qrSvg = vkQr.createQR(`https://todoapp.voloshinskii.ru?token=${token}`, {\n    qrSize: 256,\n    isShowLogo: false\n  });\n  return (\n    <div style={{textAlign: 'center'}}>\n      <h2>Share this note</h2>\n      <div style={{width: '256px', margin: 'auto', marginBottom: '10px'}} dangerouslySetInnerHTML={{__html: qrSvg}}/>\n    </div>\n  );\n}\n\nconst Home = ({authFirebase, saveData, loading, uid, editor, token}) => (\n  <div>\n    {!uid && <button onClick={authFirebase}>Sync with other devices</button>}\n    {!loading && editor(saveData)}\n    {uid && showQr(uid, token)}\n  </div>\n)\n\nconst mapStateToProps = ({ editor, firebase }) => ({\n  data: editor.data,\n  uid: firebase.uid,\n  token: firebase.token,\n  editor: editor.editor,\n  loading: firebase.loading\n})\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      saveData,\n      authFirebase\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home)\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport Home from '../home'\nimport firebase from 'firebase'\n\nconst App = () => (\n  <div>\n    <main>\n      <Route exact path=\"/\" component={Home} />\n    </main>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './store'\nimport App from './containers/app'\n\nimport 'sanitize.css/sanitize.css'\nimport './index.css'\n\nconst target = document.querySelector('#root')\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <App />\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  target\n)\n"],"sourceRoot":""}